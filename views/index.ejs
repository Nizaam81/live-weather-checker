<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Weather App</title>
  <link rel="stylesheet" href="style.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>
<body>
  <div class="weather-container">
    <div class="app-header">
      <h1><span>üå§Ô∏è</span> Weather Dashboard</h1>
    </div>
    
    <form id="weatherForm">
      <div class="input-group">
        <input type="text" id="cityInput" placeholder="Enter city name" value="London" required />
      </div>
      <button type="submit">Get Weather</button>
    </form>

    <div class="weather-result" id="weatherResult" style="display:none;">
      <div class="location" id="location"></div>
      <img id="weatherIcon" class="icon" src="" alt="Weather icon" />
      <div class="temp" id="temp"></div>
      <div class="description" id="description"></div>
    
      <div class="details">
        <div class="detail-card" style="--i:1">
          <div class="label"><span class="icon-small">üíß</span>Humidity</div>
          <div class="value"><span id="humidity"></span>%</div>
        </div>
        <div class="detail-card" style="--i:2">
          <div class="label"><span class="icon-small">üå¨Ô∏è</span>Wind</div>
          <div class="value"><span id="windSpeed"></span> m/s <span id="windDirection"></span></div>
        </div>
        <div class="detail-card" style="--i:3">
          <div class="label"><span class="icon-small">üîµ</span>Pressure</div>
          <div class="value"><span id="pressure"></span> hPa</div>
        </div>
        <div class="detail-card" style="--i:4">
          <div class="label"><span class="icon-small">üå°Ô∏è</span>Feels like</div>
          <div class="value"><span id="feelsLike"></span> ¬∞C</div>
        </div>
        <div class="detail-card" style="--i:5">
          <div class="label"><span class="icon-small">üåÖ</span>Sunrise</div>
          <div class="value"><span id="sunrise"></span></div>
        </div>
        <div class="detail-card" style="--i:6">
          <div class="label"><span class="icon-small">üåá</span>Sunset</div>
          <div class="value"><span id="sunset"></span></div>
        </div>
      </div>
    </div>
    
  </div>
<script>
 
document.getElementById('weatherForm').addEventListener("submit", async (event) => {
  event.preventDefault();

  const cityInput = document.getElementById('cityInput').value.trim();
  const button = document.querySelector('button');
  

  button.innerHTML = '<span class="loading">Getting weather</span>';
  button.disabled = true;
  button.style.opacity = "0.8";
  
  const loadingSpan = document.querySelector('.loading');
  let dots = 0;
  const loadingInterval = setInterval(() => {
    dots = (dots + 1) % 4;
    loadingSpan.textContent = 'Getting weather' + '.'.repeat(dots);
  }, 300);

  try {
    const response = await fetch("/weather", {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ city: cityInput })
    });

    const result = await response.json();

    clearInterval(loadingInterval);
    button.innerHTML = 'Get Weather';
    button.disabled = false;
    button.style.opacity = "1";

    if (response.ok) {
      document.getElementById('weatherResult').style.display = "block";

     
      document.getElementById('location').textContent = `${result.city}, ${result.country}`;

     
      document.getElementById('temp').textContent = `${result.temp}`;
      document.getElementById('feelsLike').textContent = `${result.feels_like} ¬∞C`;
      document.getElementById('description').textContent = result.description;

  
      document.getElementById('weatherIcon').src = `https://openweathermap.org/img/wn/${result.icon}@2x.png`;
      document.getElementById('weatherIcon').alt = result.description;

    
      document.getElementById('humidity').textContent = result.humidity;
      document.getElementById('pressure').textContent = result.pressure;
      document.getElementById('windSpeed').textContent = result.windSpeed;
      document.getElementById('windDirection').textContent = degToCompass(result.windDeg);

    
      document.getElementById('sunrise').textContent = unixToLocalTime(result.sunrise, result.timezone);
      document.getElementById('sunset').textContent = unixToLocalTime(result.sunset, result.timezone);

     
      const weatherResult = document.getElementById('weatherResult');
      weatherResult.style.display = "block";
      
   
      const locationElement = document.getElementById('location');
      locationElement.style.opacity = "0";
      locationElement.style.transform = "translateY(-20px)";
      
   
      const tempElement = document.getElementById('temp');
      tempElement.style.opacity = "0";
      tempElement.style.transform = "scale(0.9)";
      
    
      const descElement = document.getElementById('description');
      descElement.style.opacity = "0";
      
      
      setTimeout(() => {
        locationElement.style.opacity = "1";
        locationElement.style.transform = "translateY(0)";
        locationElement.style.transition = "all 0.5s ease";
        
        setTimeout(() => {
          tempElement.style.opacity = "1";
          tempElement.style.transform = "scale(1)";
          tempElement.style.transition = "all 0.5s ease";
          
          setTimeout(() => {
            descElement.style.opacity = "1";
            descElement.style.transition = "all 0.5s ease";
          }, 200);
        }, 200);
      }, 100);

    } else {
      Swal.fire({
  toast: true,
  icon: 'error',
  title: 'Oops!',
  text: result.error || 'Failed to retrieve weather data. Please try again later.',
  position: 'top-end',
  showConfirmButton: false,
  timer: 5000,
  timerProgressBar: true,
  background: '#ffffff',       
  color: '#000000',           
});
      document.getElementById('weatherResult').style.display = "none";
    }

  } catch (error) {
    Swal.fire({
  toast: true,
  icon: 'error',
  title: 'Unable to Fetch Weather Data',
  html: `
    <p style="font-size:16px; margin: 0;">Something went wrong while connecting to the weather server.</p>
    <p style="font-size:14px; color:gray; margin: 0;">Please check your internet connection or try again later.</p>
  `,
  background: '#1e1e2f',
  color: '#fff',
  showConfirmButton: false,      
  position: 'top-end',
  timer: 5000,
  timerProgressBar: true,
  customClass: {
    popup: 'rounded-xl shadow-lg',
    title: 'text-lg',
    
  }
});

    document.getElementById('weatherResult').style.display = "none";
  }
});


function degToCompass(num) {
  const val = Math.floor((num / 22.5) + 0.5);
  const arr = ["N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE",
               "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW"];
  return arr[(val % 16)];
}


function unixToLocalTime(unix, timezone) {
  
  const date = new Date((unix + timezone) * 1000);
  
  const hours = date.getUTCHours().toString().padStart(2, "0");
  const minutes = date.getUTCMinutes().toString().padStart(2, "0");
  return `${hours}:${minutes}`;
}

</script>
</body>
</html>